let DPP=class{constructor(e){let t=e.logging||!1,r=e.QOper8,s=e.qOptions||{},i=(e.idb_name,e.storeName||"DPP");this.name="DPP-Q",this.build="2.1",this.buildDate="31 July 2022",this.listeners=new Map,this.logging=t||!1,this.storeName=i;let o=s.handlerPath||"https://robtweed.github.io/DPP/src/idb_handlers/";"/"!==o.charAt(str.length-1)&&(o+="/");let a=s.workerLoaderPath||"https://robtweed.github.io/QOper8/src/";"/"!==a.charAt(str.length-1)&&(a+="/"),this.QOper8=new r({poolSize:1,workerLoaderUrl:a+"QOper8Worker.min.js",logging:s.logging,handlersByMessageType:new Map([["instantiate",o+"instantiate.min.js"],["restore",o+"restore.min.js"],["put",o+"put.min.js"],["delete",o+"delete.min.js"]]),workerInactivityCheckInterval:s.workerInactivityCheckInterval||60,workerInactivityLimit:s.workerInactivityLimit||60});let n=this;this.deepProxy=class{constructor(e,t){return this._preproxy=new WeakMap,this._handler=t,this.proxify(e,[])}makeHandler(e){let t=this;return{set:(r,s,i,o)=>("object"==typeof i&&(i=t.proxify(i,[...e,s])),r[s]=i,t._handler.set&&t._handler.set(r,[...e,s],i,o),!0),deleteProperty(r,s){if(Reflect.has(r,s)){t.unproxy(r,s);let i=Reflect.deleteProperty(r,s);return i&&t._handler.deleteProperty&&t._handler.deleteProperty(r,[...e,s]),i}return!1}}}unproxy(e,t){this._preproxy.has(e[t])&&(e[t]=this._preproxy.get(e[t]),this._preproxy.delete(e[t]));for(let r of Object.keys(e[t]))"object"==typeof e[t][r]&&this.unproxy(e[t],r)}proxify(e,t){for(let r of Object.keys(e))"object"==typeof e[r]&&(e[r]=this.proxify(e[r],[...t,r]));let r=new Proxy(e,this.makeHandler(t));return this._preproxy.set(r,e),r}},this.persistAs=class{constructor(e){this.storeName=e,this.persist=!0}async proxy(e){let t=this,r=(this.storeName,new n.deepProxy({},{async set(e,r,s,i){if(!t.persist)return;n.logMessage("proxy set called with prop = "+JSON.stringify(r));let o=t.receiver,a=!1;function l(t,s){1===t.length&&(e[r]=s),n.emit("save",s);let i={type:"put",key:t,value:s};n.QOper8.message(i)}return r.forEach(function(e,t){o=o[e],a&&(r[t]=[e]),a=Array.isArray(o)}),"object"==typeof s&&async function e(t,r){n.logMessage("getProps called for "+JSON.stringify(t)),n.logMessage("obj="+JSON.stringify(r));let s={type:"delete",key:t};n.QOper8.message(s);let i=Array.isArray(r);for(let[s,o]of Object.entries(r)){i&&(s=[s]);let r=t.slice();r.push(s),"object"!=typeof o?l(r,o):e(r,o)}}(r,s),["string","number","boolean","symbol","bigint"].includes(typeof s)&&l(r,s),n.emit("proxy_set_completed",r),!0},deleteProperty(e,r){let s=t.receiver,i=!1;r.forEach(function(e,t){s=s[e],i&&(r[t]=[e]),i=Array.isArray(s)}),n.emit("delete",r);let o={type:"delete",key:r};n.QOper8.message(o)}}));return this.receiver=r,"new"!==e?await this.restore():await this.clear(),r}async clear(){await this.store.clear()}async restore(){let e={type:"restore",storeName:this.storeName},t=await n.QOper8.send(e);this.persist=!1;for(let e in t.obj)this.receiver[e]=t.obj[e];this.persist=!0}}}static async create(e){return e.QOper8||(e.QOper8=await import("https://robtweed.github.io/QOper8/src/QOper8.min.js")),new DPP(e)}start(e){Array.isArray(e)||(e=[e]);let t={type:"instantiate",storeName:this.storeName,objectStores:e};this.QOper8.message(t)}isEmpty(e){for(const t in e)return!1;return!0}on(e,t){this.listeners.has(e)||this.listeners.set(e,t)}off(e){this.listeners.has(e)&&this.listeners.delete(e)}emit(e,t){if(this.listeners.has(e)){this.listeners.get(e).call(this,t)}}logMessage(e){this.logging&&console.log(Date.now()+": "+e)}};export{DPP};